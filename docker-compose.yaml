# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# Modified by Facundo Lucianna on July 12, 2025, based on the 
# original file from the ASF.

# WARNING: This configuration is for local development. Do not use it in a production deployment.

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./postgres/mlflow.sql:/docker-entrypoint-initdb.d/mlflow.sql
    networks:
      - backend

  s3:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - backend

  airflow-init:
    build: ./dockerfiles/airflow
    container_name: airflow_init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db init &&
        airflow users create \
          --username airflow \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email airflow@admin.com \
          --password airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: 51905fa766adeb2087a2ea175b85d69c
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      MLFLOW_S3_ENDPOINT_URL: http://s3:9000
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    depends_on:
      - postgres
    networks:
      - backend

  airflow-webserver:
    build: ./dockerfiles/airflow
    container_name: airflow_webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.session'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: 51905fa766adeb2087a2ea175b85d69c
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      MLFLOW_S3_ENDPOINT_URL: http://s3:9000
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/data:/opt/airflow/data
    depends_on:
      - postgres
    command: webserver
    networks:
      - backend

  airflow-scheduler:
    build: ./dockerfiles/airflow
    container_name: airflow_scheduler
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: 51905fa766adeb2087a2ea175b85d69c
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      MLFLOW_S3_ENDPOINT_URL: http://s3:9000
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/data:/opt/airflow/data
    depends_on:
      - postgres
    command: scheduler
    networks:
      - backend
      
  create_s3_buckets:
    image: minio/mc:latest
    container_name: minio_create_bucket
    depends_on:
      - s3
    entrypoint: >
      /bin/sh -c '
      sleep 5;
      /usr/bin/mc alias set s3 http://s3:9000 minio minio123;
      /usr/bin/mc mb s3/data || true;
      /usr/bin/mc policy set public s3/data;
      /usr/bin/mc mb s3/mlflow || true;
      /usr/bin/mc policy set public s3/mlflow;
      exit 0;
      '
    networks:
      - backend

  mlflow:
    build: ./dockerfiles/mlflow
    image: mlflow
    container_name: mlflow
    depends_on:
      - postgres
      - s3
    environment:
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
      - MLFLOW_S3_ENDPOINT_URL=http://s3:9000
    ports:
      - "5000:5000"
    networks:
      - backend    
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: sales-api:latest
    container_name: sales_api
    environment:
      - DATABASE_URL=sqlite:///./data/registry.db
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
      - MLFLOW_S3_ENDPOINT_URL=http://s3:9000
    ports:
      - "8000:8000"
    volumes:
      - api_data:/app/data
    depends_on:
      - mlflow
      - s3
      - postgres
    networks:
      - backend
  streamlit:
    build:
      context: ./streamlit
      dockerfile: Dockerfile
    container_name: streamlit
    environment:
      - API_URL=http://api:8000
    ports:
      - "8501:8501"
    depends_on:
      - api
    networks:
      - backend

volumes:
  db_data:
  minio_data:
  api_data:

networks:
  backend:
